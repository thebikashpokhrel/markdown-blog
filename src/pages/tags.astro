---
import type { CollectionEntry } from "astro:content";
import MainLayout from "../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import { set } from "astro:schema";

const blogArticles: CollectionEntry<"blog">[] = await getCollection("blog");

// Flatten the tags from all articles and count their occurrences
const tagCounts: Record<string, number> = blogArticles
  .flatMap((article) => article.data.tags) // Extract all tags
  .reduce((acc: Record<string, number>, tag: string) => {
    acc[tag] = (acc[tag] || 0) + 1; // Increment the count for each tag
    return acc;
  }, {});

// Get the unique tags
const uniqueTags: string[] = Object.keys(tagCounts);
---

<MainLayout title="tags">
  <h1 class="px-2 mb-4 text-2xl font-semibold dark:text-white">All Tags</h1>
  <ul class="space-y-2 max-w-sm">
    {
      uniqueTags.map((tag) => (
        <li>
          <a
            href={`/articles/tag/${tag}`}
            class="px-2 flex items-center justify-between py-2 text-lg font-medium rounded-md dark:bg-slate-700 dark:text-white bg-gray-50 text-gray-700 hover:bg-primary hover:text-white transition duration-300"
          >
            <span># {tag}</span>
            <span class="px-2 py-1 text-sm font-semibold bg-gray-200 text-gray-700 rounded-full group-hover:bg-primary-dark group-hover:text-white">
              {tagCounts[tag]} Article{tagCounts[tag] > 1 ? "s" : ""}
            </span>
          </a>
        </li>
      ))
    }
  </ul>
</MainLayout>
